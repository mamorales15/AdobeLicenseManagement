@model AdobeLicenseManagement.Models.EndUserFormViewModel

@{
    ViewBag.Title = "End User Form";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("EndUserForm", "Forms", FormMethod.Post, new { id = "endUserForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!-- Carries Request ID over from GET action to POST action -->
        <input type="hidden" value=@ViewData["request"] name="RequestID" />

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @placeholder = "UserName" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "example@utep.edu" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BuildingID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.BuildingID, (SelectList)ViewBag.BuildingList, "-- Select Building --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BuildingID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RmNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RmNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "123" } })
                @Html.ValidationMessageFor(model => model.RmNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tag, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tag, new { htmlAttributes = new { @class = "form-control", @placeholder = "123456" } })
                @Html.ValidationMessageFor(model => model.Tag, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ComputerSerial, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ComputerSerial, new { htmlAttributes = new { @class = "form-control", @placeholder = "1A2B3C4D5E6F" } })
                @Html.ValidationMessageFor(model => model.ComputerSerial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ComputerName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ComputerName, new { htmlAttributes = new { @class = "form-control", @placeholder = "lib123-123456m" } })
                @Html.ValidationMessageFor(model => model.ComputerName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-default" />
            </div>
        </div>

    </div>
}
