@model PagedList.IPagedList<AdobeLicenseManagement.Models.ServiceDeskRequest>
@using PagedList.Mvc;

@{
    ViewBag.Title = "ServiceDesk Requests Table";
}

<h2>@ViewBag.Title</h2>

<div class="col-md-8">
    @using (Html.BeginForm("Index", "ServiceDeskRequests", FormMethod.Get))
    {
        <p title="Search by Service Desk Request ID or Request ID">
            @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control" })
            <button type="submit" value="Search" class="btn btn-default">Search</button>
        </p>
    }
</div>

<div class="col-md-4">
    @using (Html.BeginForm("Index", "ServiceDeskRequests", FormMethod.Get))
    {
        <p title="Change number of items on each page">
            Page Size: @Html.TextBox("pageSize", ViewBag.PageSize as string, new { @class = "form-control" })
            <button type="submit" value="Submit" class="btn btn-default">Submit</button>
        </p>
    }
</div>

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Service Desk Request ID", "Index", new { sortOrder = ViewBag.ServiceDeskRequestIDSortParam, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Request ID", "Index", new { sortOrder = ViewBag.RequestIDSortParam, currentFilter = ViewBag.CurrentFilter })
        </th>
<th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.ServiceDeskRequestID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Request.RequestID)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ServiceDeskRequestID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ServiceDeskRequestID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ServiceDeskRequestID })
        </td>
    </tr>
}

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, page, pageSize = ViewBag.PageSize }))
